{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/runner/work/watchparty/watchparty/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Modal,Button,Popup,Icon,Grid,Radio}from'semantic-ui-react';import{openFileSelector,serverPath}from'../../utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SubtitleModal=/*#__PURE__*/function(_React$Component){_inherits(SubtitleModal,_React$Component);var _super=_createSuper(SubtitleModal);function SubtitleModal(){var _this;_classCallCheck(this,SubtitleModal);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:false,searchResults:[]};_this.uploadSubtitle=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var files,file,reader;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return openFileSelector('.srt');case 2:files=_context2.sent;if(files){_context2.next=5;break;}return _context2.abrupt(\"return\");case 5:file=files[0];reader=new FileReader();reader.addEventListener('load',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var _event$target;var subData,resp,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:subData=(_event$target=event.target)===null||_event$target===void 0?void 0:_event$target.result;// Upload to server\n_context.next=3;return window.fetch(serverPath+'/subtitle',{method:'POST',body:subData,headers:{'Content-Type':'text/plain'}});case 3:resp=_context.sent;_context.next=6;return resp.json();case 6:json=_context.sent;_this.props.socket.emit('CMD:subtitle',serverPath+'/subtitle/'+json.hash);case 8:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());reader.readAsText(file);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return _this;}_createClass(SubtitleModal,[{key:\"render\",value:function render(){var _this2=this;var closeModal=this.props.closeModal;return/*#__PURE__*/_jsxs(Modal,{open:true,onClose:closeModal,children:[/*#__PURE__*/_jsxs(Modal.Header,{children:[\"Subtitles are \",Boolean(this.props.currentSubtitle)?'on':'off',/*#__PURE__*/_jsx(Button,{style:{float:'right'},color:\"red\",title:\"Remove Subtitles\",disabled:!Boolean(this.props.currentSubtitle)||!this.props.haveLock(),icon:true,onClick:function onClick(){_this2.props.socket.emit('CMD:subtitle',null);},children:/*#__PURE__*/_jsx(Icon,{name:\"trash\"})})]}),/*#__PURE__*/_jsx(Modal.Content,{image:true,children:/*#__PURE__*/_jsxs(Modal.Description,{children:[process.env.NODE_ENV==='development'&&/*#__PURE__*/_jsx(\"div\",{style:{maxWidth:'600px'},children:this.props.currentSubtitle}),/*#__PURE__*/_jsxs(Grid,{columns:2,children:[/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsxs(Button,{loading:this.state.loading,color:\"green\",disabled:!this.props.haveLock(),icon:true,labelPosition:\"left\",fluid:true,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var resp,json;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_this2.setState({loading:true});_context3.next=3;return window.fetch(serverPath+'/searchSubtitles?url='+_this2.props.src);case 3:resp=_context3.sent;_context3.next=6;return resp.json();case 6:json=_context3.sent;_this2.setState({searchResults:json});_this2.setState({loading:false});case 9:case\"end\":return _context3.stop();}}},_callee3);})),children:[/*#__PURE__*/_jsx(Icon,{name:\"search\"}),\"Search OpenSubtitles\"]})}),/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsx(Popup,{content:\"Upload a .srt subtitle file for this video\",trigger:/*#__PURE__*/_jsxs(Button,{color:\"violet\",icon:true,labelPosition:\"left\",fluid:true,onClick:function onClick(){return _this2.uploadSubtitle();},disabled:!this.props.haveLock(),children:[/*#__PURE__*/_jsx(Icon,{name:\"closed captioning\"}),\"Upload Subtitle\"]})})})]}),/*#__PURE__*/_jsx(\"div\",{children:this.state.searchResults.map(function(result){var _this2$props$currentS;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Radio,{label:result.SubFileName,name:\"radioGroup\",value:result.SubDownloadLink,checked:(_this2$props$currentS=_this2.props.currentSubtitle)===null||_this2$props$currentS===void 0?void 0:_this2$props$currentS.includes(result.SubDownloadLink),onChange:function onChange(e,_ref4){var value=_ref4.value;_this2.props.socket.emit('CMD:subtitle',serverPath+'/downloadSubtitles?url='+value);}})});})})]})})]});}}]);return SubtitleModal;}(React.Component);","map":{"version":3,"sources":["/home/runner/work/watchparty/watchparty/src/components/Modal/SubtitleModal.tsx"],"names":["React","Modal","Button","Popup","Icon","Grid","Radio","openFileSelector","serverPath","SubtitleModal","state","loading","searchResults","uploadSubtitle","files","file","reader","FileReader","addEventListener","event","subData","target","result","window","fetch","method","body","headers","resp","json","props","socket","emit","hash","readAsText","closeModal","Boolean","currentSubtitle","float","haveLock","process","env","NODE_ENV","maxWidth","setState","src","map","SubFileName","SubDownloadLink","includes","e","value","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, Button, Popup, Icon, Grid, Radio } from 'semantic-ui-react';\nimport { Socket } from 'socket.io-client';\nimport { openFileSelector, serverPath } from '../../utils';\n\nexport class SubtitleModal extends React.Component<{\n  closeModal: Function;\n  currentSubtitle: string;\n  haveLock: Function;\n  src: string;\n  socket: Socket;\n}> {\n  state = {\n    loading: false,\n    searchResults: [],\n  };\n  uploadSubtitle = async () => {\n    const files = await openFileSelector('.srt');\n    if (!files) {\n      return;\n    }\n    const file = files[0];\n    const reader = new FileReader();\n    reader.addEventListener('load', async (event) => {\n      const subData = event.target?.result;\n      // Upload to server\n      const resp = await window.fetch(serverPath + '/subtitle', {\n        method: 'POST',\n        body: subData,\n        headers: { 'Content-Type': 'text/plain' },\n      });\n      // Once URL obtained, make those the room subtitles\n      const json = await resp.json();\n      this.props.socket.emit(\n        'CMD:subtitle',\n        serverPath + '/subtitle/' + json.hash\n      );\n    });\n    reader.readAsText(file);\n  };\n  render() {\n    const { closeModal } = this.props;\n    return (\n      <Modal open={true} onClose={closeModal as any}>\n        <Modal.Header>\n          Subtitles are {Boolean(this.props.currentSubtitle) ? 'on' : 'off'}\n          <Button\n            style={{ float: 'right' }}\n            color=\"red\"\n            title=\"Remove Subtitles\"\n            disabled={\n              !Boolean(this.props.currentSubtitle) || !this.props.haveLock()\n            }\n            icon\n            onClick={() => {\n              this.props.socket.emit('CMD:subtitle', null);\n            }}\n          >\n            <Icon name=\"trash\" />\n          </Button>\n        </Modal.Header>\n        <Modal.Content image>\n          <Modal.Description>\n            {process.env.NODE_ENV === 'development' && (\n              <div style={{ maxWidth: '600px' }}>\n                {this.props.currentSubtitle}\n              </div>\n            )}\n            <Grid columns={2}>\n              <Grid.Column>\n                <Button\n                  loading={this.state.loading}\n                  color=\"green\"\n                  disabled={!this.props.haveLock()}\n                  icon\n                  labelPosition=\"left\"\n                  fluid\n                  onClick={async () => {\n                    this.setState({ loading: true });\n                    const resp = await window.fetch(\n                      serverPath + '/searchSubtitles?url=' + this.props.src\n                    );\n                    const json = await resp.json();\n                    this.setState({ searchResults: json });\n                    this.setState({ loading: false });\n                  }}\n                >\n                  <Icon name=\"search\" />\n                  Search OpenSubtitles\n                </Button>\n              </Grid.Column>\n              <Grid.Column>\n                <Popup\n                  content=\"Upload a .srt subtitle file for this video\"\n                  trigger={\n                    <Button\n                      color=\"violet\"\n                      icon\n                      labelPosition=\"left\"\n                      fluid\n                      onClick={() => this.uploadSubtitle()}\n                      disabled={!this.props.haveLock()}\n                    >\n                      <Icon name=\"closed captioning\" />\n                      Upload Subtitle\n                    </Button>\n                  }\n                />\n              </Grid.Column>\n            </Grid>\n            <div>\n              {this.state.searchResults.map((result: any) => (\n                <div>\n                  <Radio\n                    label={result.SubFileName}\n                    name=\"radioGroup\"\n                    value={result.SubDownloadLink}\n                    checked={this.props.currentSubtitle?.includes(\n                      result.SubDownloadLink\n                    )}\n                    onChange={(e, { value }) => {\n                      this.props.socket.emit(\n                        'CMD:subtitle',\n                        serverPath + '/downloadSubtitles?url=' + value\n                      );\n                    }}\n                  />\n                </div>\n              ))}\n            </div>\n            {/* TODO add a spinner */}\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}